---
- name: 'add stonith ssh'
  shell:
    cmd: >
      /usr/sbin/pcs stonith create stonith-ssh-master fence_ssh
      user=fence
      sudo=true
      private-key="/home/fence/.ssh/id_rsa"
      hostname="{{ hostvars['master']['ansible_fqdn'] }}"
      pcmk_host_list="{{ hostvars['master']['ansible_fqdn'] }}"
      --force
      --disabled
      &&
      /usr/sbin/pcs stonith create stonith-ssh-slave fence_ssh
      user=fence
      sudo=true
      private-key="/home/fence/.ssh/id_rsa"
      hostname="{{ hostvars['slave']['ansible_fqdn'] }}"
      pcmk_host_list="{{ hostvars['slave']['ansible_fqdn'] }}"
      --force
      --disabled
  register: stonith_failure
  failed_when: "stonith_failure.rc != 0 and stonith_failure.rc == 1 and stonith_failure.stderr != 'Error: \\'stonith-ssh-master\\' already exists'"

- name: 'check stonith resources'
  shell:
    cmd: /usr/sbin/pcs resource cleanup && /usr/sbin/pcs status
  register: stonith_resource

- name: 'show resources'
  debug:
    var: stonith_resource.stdout_lines

- name: 'add location: stonith master on slave node'
  shell:
    cmd: "/usr/sbin/pcs constraint location stonith-ssh-master avoids {{ hostvars['master']['ansible_fqdn'] }}"

- name: 'add location: stonith slave on master node'
  shell:
    cmd: "/usr/sbin/pcs constraint location stonith-ssh-slave avoids {{ hostvars['slave']['ansible_fqdn'] }}"

- name: 'get location constraints'
  shell:
    cmd: "/usr/sbin/pcs resource cleanup && /usr/sbin/pcs constraint location --full"
  register: location_constraints

- name: 'show location constraints'
  debug:
    var: location_constraints.stdout_lines

- name: 'verify everything is ok'
  shell:
    cmd: /usr/sbin/crm_verify -LV

- name: 'enable stonith master and slave'
  shell:
    cmd: /usr/sbin/pcs stonith enable stonith-ssh-master && /usr/sbin/pcs stonith enable stonith-ssh-slave

- name: 'check stonith resources'
  shell:
    cmd: >
      /usr/sbin/stonith_admin --cleanup --history={{ hostvars['master']['ansible_fqdn'] }} &&
      /usr/sbin/stonith_admin --cleanup --history={{ hostvars['slave']['ansible_fqdn'] }} &&
      /usr/sbin/pcs status
  register: stonith_resource

- name: 'show resources'
  debug:
    var: stonith_resource.stdout_lines

- name: 'enable cluster to use STONITH'
  shell:
    cmd: /usr/sbin/pcs property set stonith-enabled=true